{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { signOut } from 'firebase/auth';\nimport { auth } from \"../firebaseConfig\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen() {\n  var stack = createNativeStackNavigator();\n  var navigation = useNavigation();\n\n  var handleSignOut = function handleSignOut() {\n    signOut(auth).then(function () {\n      navigation.replace(\"Login\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var GradesScreenRedir = function GradesScreenRedir() {\n    navigation.replace(\"AddGrades\");\n  };\n\n  var addStudentRedir = function addStudentRedir() {\n    navigation.replace(\"AddStudent\");\n  };\n\n  var ShowGradesRedir = function ShowGradesRedir() {\n    navigation.replace(\"ShowGrades\");\n  };\n\n  var StudentsScreenRedir = function StudentsScreenRedir() {\n    navigation.replace(\"Students\");\n  };\n\n  var EditStudentRedir = function EditStudentRedir() {\n    navigation.navigate('EditStudent', {\n      paramKey: 'CWaTPHH7Vu8zGjV44vVm'\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: addStudentRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Create student\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: ShowGradesRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Grades list\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: StudentsScreenRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Students\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: EditStudentRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Edit one student\"\n      })\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/HomeScreen.js"],"names":["React","signOut","auth","useNavigation","createNativeStackNavigator","HomeScreen","stack","navigation","handleSignOut","then","replace","catch","error","alert","message","GradesScreenRedir","addStudentRedir","ShowGradesRedir","StudentsScreenRedir","EditStudentRedir","navigate","paramKey","styles","button","buttonText","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport React from 'react'\r\nimport { signOut } from 'firebase/auth'\r\nimport { auth } from '../firebaseConfig'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\n/*\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport React from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n//import { createUser, updateUser, deleteUser} from './UserScreen';\r\n*/\r\n\r\nconst HomeScreen = () => {\r\n\r\n  const stack = createNativeStackNavigator();\r\n  \r\n  const navigation = useNavigation();\r\n\r\n  const handleSignOut = () => {\r\n    signOut(auth) \r\n    .then(() => {\r\n      navigation.replace(\"Login\")\r\n    })\r\n    .catch(error => alert(error.message))\r\n  }\r\n\r\n  const GradesScreenRedir = () => {\r\n    navigation.replace(\"AddGrades\")\r\n  }\r\n\r\n  const addStudentRedir = () => {\r\n    navigation.replace(\"AddStudent\")\r\n  }\r\n\r\n  const ShowGradesRedir = () => {\r\n    navigation.replace(\"ShowGrades\");\r\n  }\r\n\r\n  const StudentsScreenRedir = () => {\r\n    navigation.replace(\"Students\");\r\n  }\r\n\r\n  const EditStudentRedir = () => {\r\n    //navigation.replace(\"EditStudent\")\r\n    navigation.navigate('EditStudent', {\r\n      paramKey: 'CWaTPHH7Vu8zGjV44vVm',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View>\r\n        <TouchableOpacity\r\n          onPress={addStudentRedir}\r\n          style={styles.button}>\r\n            <Text styles={styles.buttonText}>Create student</Text>\r\n\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={ShowGradesRedir}\r\n          style={styles.button}>\r\n            <Text styles={styles.buttonText}>Grades list</Text>\r\n\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPress={StudentsScreenRedir}\r\n          style={styles.button}>\r\n            <Text styles={styles.buttonText}>Students</Text>\r\n\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          onPress={EditStudentRedir}\r\n          style={styles.button}>\r\n            <Text styles={styles.buttonText}>Edit one student</Text>\r\n\r\n        </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#0782F9',\r\n    width: '60%',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  buttonOutline: {\r\n      backgroundColor: 'white',\r\n      marginTop: 5,\r\n      borderColor: '#0782F9',\r\n      borderWidth: 2,\r\n  },\r\n  buttonText: {\r\n      color: 'white',\r\n      fontWeight: '700',\r\n      fontSize: 16,\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}