{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { db } from \"../firebaseConfig\";\nimport { collection, doc, getDoc, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { DataTable } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EditStudent = function EditStudent() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      students = _useState2[0],\n      setStudents = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      grades = _useState4[0],\n      setGrades = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userDoc = _useState6[0],\n      setUserDoc = _useState6[1];\n\n  var usersCollectionRef = collection(db, \"Students\");\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"Home\");\n  };\n\n  var myDoc = doc(db, \"Students\", \"I9ZA87JHgKPWFjAx8qMp\");\n  useEffect(function () {\n    var Read = function Read() {\n      var myDoc = doc(db, \"Students\", \"I9ZA87JHgKPWFjAx8qMp\");\n      getDoc(myDoc).then(function (snapshot) {\n        if (snapshot.exists) {\n          setUserDoc(snapshot.data());\n        } else {\n          alert(\"No doc found\");\n        }\n      }).catch(function (error) {\n        console.log(\"ERRORROROROROROROROROROORRO\");\n        alert(error.message);\n      });\n    };\n\n    Read();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: HomeScreenRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Go Home\"\n      })\n    }), _jsx(View, {\n      children: _jsxs(DataTable, {\n        children: [_jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            children: \"fName\"\n          }), _jsx(DataTable.Title, {\n            children: \"lName\"\n          }), _jsx(DataTable.Title, {\n            children: \"DOB\"\n          })]\n        }), _jsxs(DataTable.Row, {\n          children: [_jsx(DataTable.Cell, {\n            children: userDoc.fName\n          }), _jsx(DataTable.Cell, {\n            children: \"userDoc.lName\"\n          }), _jsx(DataTable.Cell, {\n            children: \"userDoc.DOB\"\n          })]\n        })]\n      })\n    }), _jsx(Button, {\n      title: \"Read Doc\",\n      onPress: Read\n    }), userDoc != null && _jsxs(Text, {\n      children: [\"Bio: \", userDoc.fName]\n    })]\n  });\n};\n\nexport default EditStudent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/EditStudent.js"],"names":["React","useState","useEffect","useNavigation","createNativeStackNavigator","db","collection","doc","getDoc","updateDoc","deleteDoc","DataTable","EditStudent","students","setStudents","grades","setGrades","userDoc","setUserDoc","usersCollectionRef","navigation","HomeScreenRedir","replace","myDoc","Read","then","snapshot","exists","data","alert","catch","error","console","log","message","styles","button","buttonText","fName","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity, Button } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, doc, getDoc, updateDoc, deleteDoc } from 'firebase/firestore';\r\n//import { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nconst EditStudent = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [grades, setGrades]= useState([]);\r\n    const [userDoc, setUserDoc] = useState(null)\r\n    const usersCollectionRef = collection(db, \"Students\");\r\n\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const HomeScreenRedir = () => {\r\n        navigation.replace(\"Home\");\r\n        }\r\n\r\n        \r\n\r\n        const myDoc = doc(db, \"Students\", \"I9ZA87JHgKPWFjAx8qMp\");\r\n        useEffect(() => {\r\n            const Read = () => {\r\n                const myDoc = doc(db, \"Students\", \"I9ZA87JHgKPWFjAx8qMp\");\r\n                \r\n                getDoc(myDoc)\r\n                // Handling promises\r\n                .then((snapshot) => {\r\n                    if(snapshot.exists){\r\n                        setUserDoc(snapshot.data())\r\n                    } else {\r\n                        alert(\"No doc found\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"ERRORROROROROROROROROROORRO\");\r\n                    alert(error.message);\r\n                })\r\n            };\r\n            \r\n            Read();\r\n          } ,[]);\r\n        \r\n       \r\n\r\n    return (\r\n        \r\n        <View>\r\n            <TouchableOpacity\r\n                onPress={HomeScreenRedir}\r\n                style={styles.button}>\r\n                <Text styles={styles.buttonText}>Go Home</Text>\r\n            </TouchableOpacity>\r\n            <View>\r\n                \r\n                        <DataTable>\r\n                            <DataTable.Header>\r\n                            <DataTable.Title>fName</DataTable.Title>\r\n                            <DataTable.Title>lName</DataTable.Title>\r\n                            <DataTable.Title>DOB</DataTable.Title>\r\n                            </DataTable.Header>\r\n                <DataTable.Row>\r\n                                <DataTable.Cell>{userDoc.fName}</DataTable.Cell>\r\n                                <DataTable.Cell>userDoc.lName</DataTable.Cell>\r\n                                <DataTable.Cell>userDoc.DOB</DataTable.Cell>\r\n                            </DataTable.Row>\r\n                \r\n            \r\n            </DataTable>\r\n            </View>\r\n            <Button title='Read Doc' onPress={Read}></Button>\r\n            {\r\n                userDoc != null &&\r\n                <Text>Bio: {userDoc.fName}</Text>\r\n            }\r\n            \r\n        </View>\r\n    );\r\n}\r\n\r\nexport default EditStudent\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })"]},"metadata":{},"sourceType":"module"}