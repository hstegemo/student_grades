{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from 'react';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from \"../firebaseConfig\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddStudent = function AddStudent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fname = _useState2[0],\n      setFname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lname = _useState4[0],\n      setLname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dob = _useState6[0],\n      setDob = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"Home\");\n  };\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var CreateStudent = function CreateStudent() {\n    var RandomNumber = Math.floor(Math.random() * 100) + 1 / 456;\n    var customId = fname + \".\" + lname + \".\" + (RandomNumber * dob).toFixed(4);\n    var myDoc = doc(db, \"Students\", customId);\n    var docData = {\n      \"fName\": fname,\n      \"lName\": lname,\n      \"DOB\": dob,\n      \"MGMT329Score\": -0.1,\n      \"MGMT450Score\": -0.1\n    };\n\n    var EditStudentRedir = function EditStudentRedir(studentid) {\n      navigation.navigate('EditStudent', {\n        paramKey: studentid\n      });\n    };\n\n    setDoc(myDoc, docData).then(function () {\n      EditStudentRedir(customId);\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: HomeScreenRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Home\"\n      })\n    }), _jsx(TextInput, {\n      placeholder: \"First Name\",\n      onChangeText: function onChangeText(text) {\n        return setFname(text);\n      },\n      children: fname\n    }), _jsx(TextInput, {\n      placeholder: \"Last Name\",\n      onChangeText: function onChangeText(text) {\n        return setLname(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Date of Birth\",\n      onChangeText: function onChangeText(text) {\n        return setDob(text);\n      }\n    }), _jsx(Button, {\n      style: styles.button,\n      title: \"Add Student\",\n      onPress: function onPress() {\n        CreateStudent({\n          \"fName\": fname,\n          \"lName\": lname,\n          \"DOB\": dob,\n          \"MGMT329Score\": -1,\n          \"MGMT450Score\": -1\n        }, true);\n      },\n      disabled: fname == \"\" || lname == \"\" || dob == \"\"\n    })]\n  });\n};\n\nexport default AddStudent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/AddStudent.js"],"names":["React","useState","doc","setDoc","db","useNavigation","AddStudent","fname","setFname","lname","setLname","dob","setDob","navigation","HomeScreenRedir","replace","text","setText","CreateStudent","RandomNumber","Math","floor","random","customId","toFixed","myDoc","docData","EditStudentRedir","studentid","navigate","paramKey","then","catch","error","alert","message","styles","container","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Button, Text, TextInput, View, TouchableOpacity } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { doc, setDoc } from 'firebase/firestore'; \r\nimport { db } from '../firebaseConfig'\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\n\r\n\r\nconst AddStudent = () => {\r\n    const [fname, setFname] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [dob, setDob] = useState(\"\");\r\n\r\n    const navigation = useNavigation();\r\n    const HomeScreenRedir = () => {\r\n        navigation.replace(\"Home\");\r\n    }\r\n    \r\n    const [text, setText] = useState(\"\");\r\n\r\n    const CreateStudent = () => {\r\n\r\n        var RandomNumber = Math.floor(Math.random() * 100) + 1 / 456;\r\n        var customId = fname + \".\" + lname + \".\" + (RandomNumber * dob).toFixed(4);\r\n        const myDoc = doc(db, \"Students\", customId)\r\n        \r\n        // Your document goes here\r\n        const docData = {\r\n            \"fName\": fname,\r\n            \"lName\": lname,\r\n            \"DOB\": dob,\r\n            \"MGMT329Score\": -0.1,\r\n            \"MGMT450Score\": -0.1,\r\n        }\r\n\r\n        const EditStudentRedir = (studentid) => {\r\n            navigation.navigate('EditStudent', {\r\n              paramKey: studentid\r\n            })\r\n          }\r\n        \r\n        setDoc(myDoc, docData)\r\n        // Handling promises\r\n        .then(() => {\r\n            EditStudentRedir(customId);\r\n        })\r\n        .catch((error) => {\r\n            alert(error.message);\r\n        })\r\n    }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                   <TouchableOpacity\r\n                onPress={HomeScreenRedir}\r\n                style={styles.button}>\r\n                <Text styles={styles.buttonText}>Home</Text>\r\n            </TouchableOpacity>\r\n                <TextInput placeholder=\"First Name\" onChangeText={(text) => setFname(text)}>{fname}</TextInput>\r\n                <TextInput placeholder=\"Last Name\" onChangeText={(text) => setLname(text)}></TextInput>\r\n                <TextInput placeholder=\"Date of Birth\" onChangeText={(text) => setDob(text)}></TextInput>\r\n                <Button style={styles.button} title='Add Student' onPress={() => {\r\n                    CreateStudent({\r\n                        \"fName\": fname,\r\n                        \"lName\": lname,\r\n                        \"DOB\": dob,\r\n                        \"MGMT329Score\": -1,\r\n                        \"MGMT450Score\": -1,\r\n                    }, true)\r\n                }} disabled={fname == \"\" || lname == \"\" || dob == \"\"}></Button>\r\n            </View>\r\n          );\r\n}\r\n\r\nexport default AddStudent\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })"]},"metadata":{},"sourceType":"module"}