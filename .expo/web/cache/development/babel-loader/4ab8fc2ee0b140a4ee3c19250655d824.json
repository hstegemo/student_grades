{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { db } from \"../firebaseConfig\";\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StudentsScreen = function StudentsScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newName = _useState2[0],\n      setNewName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newAge = _useState4[0],\n      setNewAge = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      students = _useState6[0],\n      setStudents = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      grades = _useState8[0],\n      setGrades = _useState8[1];\n\n  var usersCollectionRef = collection(db, \"Students\");\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"Home\");\n  };\n\n  useEffect(function () {\n    var getStudents = function getStudents() {\n      var data;\n      return _regeneratorRuntime.async(function getStudents$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getDocs(usersCollectionRef));\n\n            case 2:\n              data = _context.sent;\n              setStudents(data.docs.map(function (doc) {\n                return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getStudents();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Students Screen is best\"\n    }), _jsx(TouchableOpacity, {\n      onPress: HomeScreenRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Go Home\"\n      })\n    }), students.filter(function (student) {\n      return student.MGMT329Score > 0;\n    }).map(function (student) {\n      return _jsxs(View, {\n        children: [_jsxs(Text, {\n          children: [\"MGMT329: Student: \", student.fName]\n        }), _jsxs(Text, {\n          children: [\"Birthday: \", student.DOB]\n        }), _jsxs(Text, {\n          children: [\"MGMT329 Grade: \", student.MGMT329Grade]\n        })]\n      });\n    }), students.filter(function (student) {\n      return student.MGMT450Score > 0;\n    }).map(function (student) {\n      return _jsxs(View, {\n        children: [_jsxs(Text, {\n          children: [\"MGMT450: Student: \", student.fName]\n        }), _jsxs(Text, {\n          children: [\"Birthday: \", student.DOB]\n        }), _jsxs(Text, {\n          children: [\"MGMT450 Grade: \", student.MGMT450Grade]\n        })]\n      });\n    })]\n  });\n};\n\nexport default StudentsScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/StudentsScreen.js"],"names":["React","useState","useEffect","useNavigation","createNativeStackNavigator","db","collection","doc","getDocs","updateDoc","deleteDoc","Table","TableWrapper","Row","Rows","Col","Cols","Cell","StudentsScreen","newName","setNewName","newAge","setNewAge","students","setStudents","grades","setGrades","usersCollectionRef","navigation","HomeScreenRedir","replace","getStudents","data","docs","map","id","styles","button","buttonText","filter","student","MGMT329Score","fName","DOB","MGMT329Grade","MGMT450Score","MGMT450Grade","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\r\n\r\nconst StudentsScreen = () => {\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newAge, setNewAge] = useState(0);\r\n    const [students, setStudents] = useState([]);\r\n    const [grades, setGrades]= useState([]);\r\n    const usersCollectionRef = collection(db, \"Students\");\r\n\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const HomeScreenRedir = () => {\r\n        navigation.replace(\"Home\");\r\n        }\r\n\r\n        useEffect(() => {\r\n            const getStudents = async () => {\r\n              const data = await getDocs(usersCollectionRef);\r\n              //console.log(data);\r\n              setStudents(data.docs.map((doc)=> ({ ...doc.data(), id: doc.id }))); // now users are added to the db\r\n              // users are added, but not displayed before I push the refresh button (update is next)\r\n            }; \r\n            \r\n            getStudents();\r\n          } ,[]);\r\n\r\n    return (\r\n        <View>\r\n            <Text>Students Screen is best</Text>\r\n            <TouchableOpacity\r\n                onPress={HomeScreenRedir}\r\n                style={styles.button}>\r\n                <Text styles={styles.buttonText}>Go Home</Text>\r\n            </TouchableOpacity>\r\n            {students.filter(student => student.MGMT329Score > 0).map((student) => {\r\n                return (\r\n                    \r\n                    <View>\r\n                        <Text>MGMT329: Student: {student.fName}</Text>\r\n                        <Text>Birthday: {student.DOB}</Text>\r\n                        <Text>MGMT329 Grade: {student.MGMT329Grade}</Text>\r\n                    </View>\r\n                );\r\n            })}\r\n            {students.filter(student => student.MGMT450Score > 0).map((student) => {\r\n                return (\r\n                    <View>\r\n                        <Text>MGMT450: Student: {student.fName}</Text><Text>Birthday: {student.DOB}</Text>\r\n                        <Text>MGMT450 Grade: {student.MGMT450Grade}</Text>\r\n                    </View>\r\n                );\r\n            })}\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StudentsScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })"]},"metadata":{},"sourceType":"module"}