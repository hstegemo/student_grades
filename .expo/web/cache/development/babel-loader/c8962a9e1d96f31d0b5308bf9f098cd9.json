{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from \"../firebaseConfig.js\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword } from 'firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation;\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignup = function handleSignup() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      console.log(\"Added user: \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {});\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/LoginScreen.js"],"names":["React","useState","useEffect","auth","db","createUserWithEmailAndPassword","onAuthStateChanged","signInWithEmailAndPassword","useNavigation","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","user","replace","handleSignup","then","userCredential","console","log","catch","error","alert","message","styles","StyleSheet","create"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,8BAAT,EAAyCC,kBAAzC,EAA6DC,0BAA7D,QAA+F,eAA/F;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGN,aAAnB;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,WAAW,GAAGT,kBAAkB,CAACH,IAAD,EAAO,UAAAa,IAAI,EAAI;AACnD,UAAGA,IAAH,EAAQ;AACNF,QAAAA,UAAU,CAACG,OAAX,CAAmB,MAAnB;AACD;AACF,KAJqC,CAAtC;AAKA,WAAOF,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBb,IAAAA,8BAA8B,CAACF,IAAD,EAAOO,KAAP,EAAcE,QAAd,CAA9B,CACCO,IADD,CACM,UAAAC,cAAc,EAAI;AACtB,UAAMJ,IAAI,GAAGI,cAAc,CAACJ,IAA5B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,IAAI,CAACN,KAAjC;AACD,KAJD,EAKCa,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAT;AAAA,KALZ;AAMD,GAPD;;AASA,SACE,KAAC,oBAAD,KADF;AAMD,CA9BD;;AAiCA,eAAejB,WAAf;AAEA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import { KeyboardAvoidingView, StyleSheet, Text, View } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { auth, db } from \"../firebaseConfig.js\"\r\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigation = useNavigation;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, user => {\r\n      if(user){\r\n        navigation.replace(\"Home\");\r\n      }\r\n    })\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleSignup = () => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n    .then(userCredential => {\r\n      const user = userCredential.user\r\n      console.log(\"Added user: \", user.email)\r\n    })\r\n    .catch(error => alert(error.message))\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView>\r\n      \r\n    </KeyboardAvoidingView>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}