{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { db } from \"../firebaseConfig\";\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { DataTable } from 'react-native-paper';\nimport { LineChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar GradesChartScreen = function GradesChartScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newName = _useState2[0],\n      setNewName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newAge = _useState4[0],\n      setNewAge = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      students = _useState6[0],\n      setStudents = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      grades = _useState8[0],\n      setGrades = _useState8[1];\n\n  var usersCollectionRef = collection(db, \"Students\");\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mgmt329Grades = _useState10[0],\n      setMgmt329Grades = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mgmt329Labels = _useState12[0],\n      setMgmt329Labels = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mgmt450Dataset = _useState14[0],\n      setMgmt450Grades = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      mgmt450Legends = _useState16[0],\n      setMgmt450Legends = _useState16[1];\n\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"Home\");\n  };\n\n  useEffect(function () {\n    var getStudents = function getStudents() {\n      var data;\n      return _regeneratorRuntime.async(function getStudents$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getDocs(usersCollectionRef));\n\n            case 2:\n              data = _context.sent;\n              setStudents(data.docs.map(function (doc) {\n                return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getStudents();\n  }, []);\n  var valid329Students = [];\n  var valid329Scores = [];\n  students.filter(function (s) {\n    return s.MGMT329Score >= 0;\n  }).forEach(function (stud) {\n    valid329Scores.push(stud.MGMT329Scores);\n    valid329Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\n  });\n  console.log(valid329Scores);\n  console.log(valid329Students);\n  var valid450Students = [];\n  var valdi450Scores = [];\n  students.filter(function (s) {\n    return s.MGMT450Score >= 0;\n  }).forEach(function (stud) {\n    valdi450Scores.push(stud.MGMT450Scores);\n    valid450Students.push(stud.MGMT450Students);\n  });\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"MGMT329 Scores\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: valid329Students,\n        datasets: [{\n          data: valid329Scores\n        }]\n      },\n      width: Dimensions.get(\"window\").width,\n      height: 220,\n      yAxisLabel: \"\",\n      yAxisSuffix: \"%\",\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"#e26a00\",\n        backgroundGradientFrom: \"#fb8c00\",\n        backgroundGradientTo: \"#ffa726\",\n        decimalPlaces: 0,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    }), _jsx(Text, {\n      children: \"MGMT450 Scores\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: valid450Students,\n        datasets: [{\n          data: valid450Scores\n        }]\n      },\n      width: Dimensions.get(\"window\").width,\n      height: 220,\n      yAxisLabel: \"\",\n      yAxisSuffix: \"%\",\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"#e26a00\",\n        backgroundGradientFrom: \"#fb8c00\",\n        backgroundGradientTo: \"#ffa726\",\n        decimalPlaces: 0,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    })]\n  });\n};\n\nexport default GradesChartScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});\nvar chartConfig = {\n  backgroundGradientFrom: \"#1E2923\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"#08130D\",\n  backgroundGradientToOpacity: 0.5,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(26, 255, 146, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false\n};","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/GradesChart.js"],"names":["React","useState","useEffect","useNavigation","db","collection","doc","getDocs","updateDoc","deleteDoc","DataTable","LineChart","screenWidth","Dimensions","get","width","GradesChartScreen","newName","setNewName","newAge","setNewAge","students","setStudents","grades","setGrades","usersCollectionRef","mgmt329Grades","setMgmt329Grades","mgmt329Labels","setMgmt329Labels","mgmt450Dataset","setMgmt450Grades","mgmt450Legends","setMgmt450Legends","navigation","HomeScreenRedir","replace","getStudents","data","docs","map","id","valid329Students","valid329Scores","filter","s","MGMT329Score","forEach","stud","push","MGMT329Scores","fName","charAt","lName","console","log","valid450Students","valdi450Scores","MGMT450Score","MGMT450Scores","MGMT450Students","labels","datasets","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical","valid450Scores","styles","StyleSheet","create","container","flex","justifyContent","alignItems","button","padding","marginTop","buttonOutline","borderColor","borderWidth","buttonText","fontWeight","fontSize","chartConfig","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { DataTable } from 'react-native-paper';\r\nimport {\r\n    LineChart\r\n  } from \"react-native-chart-kit\";\r\n  import { Dimensions } from \"react-native\";\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n\r\nconst GradesChartScreen = () => {\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newAge, setNewAge] = useState(0);\r\n    const [students, setStudents] = useState([]);\r\n    const [grades, setGrades]= useState([]);\r\n    const usersCollectionRef = collection(db, \"Students\");\r\n    const [mgmt329Grades, setMgmt329Grades] = useState([]);\r\n    const [mgmt329Labels, setMgmt329Labels] = useState([]);\r\n    const [mgmt450Dataset, setMgmt450Grades]= useState([]);\r\n    const [mgmt450Legends, setMgmt450Legends] = useState([]);\r\n\r\n\r\n    const navigation = useNavigation();\r\n    const HomeScreenRedir = () => {\r\n      navigation.replace(\"Home\");\r\n      }\r\n  \r\n\r\n        useEffect(() => {\r\n            const getStudents = async () => {\r\n              const data = await getDocs(usersCollectionRef);\r\n              setStudents(data.docs.map((doc)=> ({ ...doc.data(), id: doc.id })));\r\n            }; \r\n            \r\n            getStudents();\r\n          } ,[]);\r\n\r\n          const valid329Students = []\r\n          const valid329Scores = []\r\n          students.filter(s => s.MGMT329Score >= 0).forEach(stud => {\r\n                valid329Scores.push(stud.MGMT329Scores);\r\n                valid329Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\r\n          })\r\n          console.log(valid329Scores);\r\n          console.log(valid329Students);\r\n\r\n          const valid450Students = []\r\n          const valdi450Scores = []\r\n          students.filter(s => s.MGMT450Score >= 0).forEach(stud => {\r\n              valdi450Scores.push(stud.MGMT450Scores);\r\n              valid450Students.push(stud.MGMT450Students);\r\n          })\r\n\r\n    return (\r\n        <View>\r\n      <Text>MGMT329 Scores</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: valid329Students,\r\n          datasets: [\r\n            {\r\n              data: valid329Scores\r\n            }\r\n          ]\r\n        }}\r\n        width={Dimensions.get(\"window\").width} // from react-native\r\n        height={220}\r\n        yAxisLabel=\"\"\r\n        yAxisSuffix=\"%\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFrom: \"#fb8c00\",\r\n          backgroundGradientTo: \"#ffa726\",\r\n          decimalPlaces: 0, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \"2\",\r\n            stroke: \"#ffa726\"\r\n          }\r\n        }}\r\n        bezier\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16\r\n        }}\r\n      />\r\n\r\n<Text>MGMT450 Scores</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: valid450Students,\r\n          datasets: [\r\n            {\r\n              data: valid450Scores\r\n            }\r\n          ]\r\n        }}\r\n        width={Dimensions.get(\"window\").width} // from react-native\r\n        height={220}\r\n        yAxisLabel=\"\"\r\n        yAxisSuffix=\"%\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFrom: \"#fb8c00\",\r\n          backgroundGradientTo: \"#ffa726\",\r\n          decimalPlaces: 0, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \"2\",\r\n            stroke: \"#ffa726\"\r\n          }\r\n        }}\r\n        bezier\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16\r\n        }}\r\n      />\r\n      \r\n    </View>\r\n    );\r\n}\r\n\r\nexport default GradesChartScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: \"#1E2923\",\r\n    backgroundGradientFromOpacity: 0,\r\n    backgroundGradientTo: \"#08130D\",\r\n    backgroundGradientToOpacity: 0.5,\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n    strokeWidth: 2, // optional, default 3\r\n    barPercentage: 0.5,\r\n    useShadowColorFromDataset: false // optional\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}