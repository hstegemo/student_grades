{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { db } from \"../firebaseConfig\";\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { DataTable } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StudentsScreen = function StudentsScreen(sid) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newName = _useState2[0],\n      setNewName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newAge = _useState4[0],\n      setNewAge = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      students = _useState6[0],\n      setStudents = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      grades = _useState8[0],\n      setGrades = _useState8[1];\n\n  var usersCollectionRef = collection(db, \"Students\");\n  var userCollectionRef = doc(db, \"Students\", \"CWaTPHH7Vu8zGjV44vVm\");\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"EditStudent(CWaTPHH7Vu8zGjV44vVm)\");\n  };\n\n  var EditStudentRedir = function EditStudentRedir(id) {\n    navigation.replace(\"EditStudent(CWaTPHH7Vu8zGjV44vVm)\");\n  };\n\n  useEffect(function () {\n    var getStudents = function getStudents() {\n      var data;\n      return _regeneratorRuntime.async(function getStudents$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getDocs(usersCollectionRef));\n\n            case 2:\n              data = _context.sent;\n              setStudents(data.docs.map(function (doc) {\n                return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getStudents();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: HomeScreenRedir,\n      style: styles.button,\n      children: _jsx(Text, {\n        styles: styles.buttonText,\n        children: \"Home\"\n      })\n    }), _jsx(View, {\n      children: _jsxs(DataTable, {\n        children: [_jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            children: \"fName\"\n          }), _jsx(DataTable.Title, {\n            children: \"lName\"\n          }), _jsx(DataTable.Title, {\n            children: \"DOB\"\n          }), _jsx(DataTable.Title, {})]\n        }), students.map(function (student) {\n          var myStudent = student;\n          return _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              children: student.fName\n            }), _jsx(DataTable.Cell, {\n              children: student.lName\n            }), _jsx(DataTable.Cell, {\n              children: student.id\n            }), _jsx(DataTable.Cell, {\n              children: _jsx(TouchableOpacity, {\n                onPress: EditStudentRedir,\n                style: styles.button,\n                children: _jsx(Text, {\n                  styles: styles.buttonText,\n                  children: \"Add Student\"\n                })\n              })\n            })]\n          });\n        })]\n      })\n    })]\n  });\n};\n\nexport default StudentsScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/StudentsScreen.js"],"names":["React","useState","useEffect","useNavigation","db","collection","doc","getDocs","updateDoc","deleteDoc","DataTable","StudentsScreen","sid","newName","setNewName","newAge","setNewAge","students","setStudents","grades","setGrades","usersCollectionRef","userCollectionRef","navigation","HomeScreenRedir","replace","EditStudentRedir","id","getStudents","data","docs","map","styles","button","buttonText","student","myStudent","fName","lName","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","buttonOutline","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, Button, View, TouchableOpacity } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport { DataTable } from 'react-native-paper';\r\n\r\nconst StudentsScreen = (sid) => {\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newAge, setNewAge] = useState(0);\r\n    const [students, setStudents] = useState([]);\r\n    const [grades, setGrades]= useState([]);\r\n    const usersCollectionRef = collection(db, \"Students\");\r\n    const userCollectionRef = doc(db, \"Students\", \"CWaTPHH7Vu8zGjV44vVm\");\r\n\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const HomeScreenRedir = () => {\r\n        navigation.replace(\"EditStudent(CWaTPHH7Vu8zGjV44vVm)\");\r\n    }\r\n\r\n    const EditStudentRedir = (id) => {\r\n        \r\n        navigation.replace(\"EditStudent(CWaTPHH7Vu8zGjV44vVm)\");\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        const getStudents = async () => {\r\n            const data = await getDocs(usersCollectionRef);\r\n            //console.log(data);\r\n            setStudents(data.docs.map((doc)=> ({ ...doc.data(), id: doc.id }))); // now users are added to the db\r\n            // users are added, but not displayed before I push the refresh button (update is next)\r\n        }; \r\n        \r\n        getStudents();\r\n        } ,[]);\r\n\r\n    return (\r\n        <View>\r\n            <TouchableOpacity\r\n                onPress={HomeScreenRedir}\r\n                style={styles.button}>\r\n                <Text styles={styles.buttonText}>Home</Text>\r\n            </TouchableOpacity>\r\n            <View>\r\n                        <DataTable>\r\n                            <DataTable.Header>\r\n                            <DataTable.Title>fName</DataTable.Title>\r\n                            <DataTable.Title>lName</DataTable.Title>\r\n                            <DataTable.Title>DOB</DataTable.Title>\r\n                            <DataTable.Title></DataTable.Title>\r\n                            </DataTable.Header>\r\n\r\n            {students.map((student) => {\r\n                const myStudent = student;\r\n                return (\r\n                <DataTable.Row>\r\n                                <DataTable.Cell>{student.fName}</DataTable.Cell>\r\n                                <DataTable.Cell>{student.lName}</DataTable.Cell>\r\n                                <DataTable.Cell>{student.id}</DataTable.Cell>\r\n                                <DataTable.Cell>\r\n                                    <TouchableOpacity onPress={EditStudentRedir} style={styles.button}>\r\n                                        <Text styles={styles.buttonText}>Add Student</Text>\r\n                                    </TouchableOpacity></DataTable.Cell>\r\n                            </DataTable.Row>\r\n                );\r\n            })}\r\n            </DataTable>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n}\r\n\r\nexport default StudentsScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })"]},"metadata":{},"sourceType":"module"}