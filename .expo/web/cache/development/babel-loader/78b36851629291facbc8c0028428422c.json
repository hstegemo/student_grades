{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { db } from \"../firebaseConfig\";\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\nimport { LineChart } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar GradesChartScreen = function GradesChartScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      students = _useState2[0],\n      setStudents = _useState2[1];\n\n  var usersCollectionRef = collection(db, \"Students\");\n  var navigation = useNavigation();\n\n  var HomeScreenRedir = function HomeScreenRedir() {\n    navigation.replace(\"Home\");\n  };\n\n  var newArray = function newArray(ar) {\n    var myArr = [];\n    ar.forEach(function (x) {\n      myArr.push(parseFloat());\n    });\n    return myArr;\n  };\n\n  useEffect(function () {\n    var getStudents = function getStudents() {\n      var data;\n      return _regeneratorRuntime.async(function getStudents$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getDocs(usersCollectionRef));\n\n            case 2:\n              data = _context.sent;\n              setStudents(data.docs.map(function (doc) {\n                return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getStudents();\n  }, []);\n  var valid329Students = [];\n  var valid329Scores = [];\n  students.filter(function (s) {\n    return s.MGMT329Score >= 0;\n  }).forEach(function (stud) {\n    valid329Scores.push(parseInt(stud.MGMT329Score));\n    valid329Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\n  });\n  var valid450Students = [];\n  var valid450Scores = [];\n  var sampleScores = [20, 50, 30, 90, 25, 34, 100];\n  var i = 0;\n  students.filter(function (s) {\n    return s.MGMT450Score >= 0;\n  }).forEach(function (stud) {\n    valid450Scores[i] = stud.MGMT450Score;\n    i++;\n    valid450Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\n  });\n  console.log('comparing arrays');\n  console.log(valid329Scores);\n  console.log([77, 39, 79, 88, 98, 92, 74]);\n\n  if (valid329Scores === [77, 39, 79, 88, 98, 92, 74]) {\n    console.log('the arrays are equal');\n  } else {\n    console.log('the arrays are');\n  }\n\n  console.log('end of comparing arrays');\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"MGMT450 Scores\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: valid450Students,\n        datasets: [{\n          data: valid329Scores\n        }]\n      },\n      width: Dimensions.get(\"window\").width,\n      height: 220,\n      yAxisLabel: \"f\",\n      yAxisSuffix: \"f\",\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"#e26a00\",\n        backgroundGradientFrom: \"#fb8c00\",\n        backgroundGradientTo: \"#ffa726\",\n        decimalPlaces: 0,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      }\n    })]\n  });\n};\n\nexport default GradesChartScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/hsteg/VSCode/ReactNative/assignment2/screens/GradesChart.js"],"names":["React","useState","useEffect","useNavigation","db","collection","doc","getDocs","updateDoc","deleteDoc","LineChart","screenWidth","Dimensions","get","width","GradesChartScreen","students","setStudents","usersCollectionRef","navigation","HomeScreenRedir","replace","newArray","ar","myArr","forEach","x","push","parseFloat","getStudents","data","docs","map","id","valid329Students","valid329Scores","filter","s","MGMT329Score","stud","parseInt","fName","charAt","lName","valid450Students","valid450Scores","sampleScores","i","MGMT450Score","console","log","labels","datasets","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","styles","StyleSheet","create","container","flex","justifyContent","alignItems","button","padding","marginTop","buttonOutline","borderColor","borderWidth","buttonText","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, doc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport {\r\n    LineChart\r\n  } from \"react-native-chart-kit\";\r\n  import { Dimensions } from \"react-native\";\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n\r\nconst GradesChartScreen = () => {const [students, setStudents] = useState([]);\r\n    const usersCollectionRef = collection(db, \"Students\");\r\n\r\n    const navigation = useNavigation();\r\n    const HomeScreenRedir = () => {\r\n      navigation.replace(\"Home\");\r\n      }\r\n\r\n      const newArray = (ar) => {\r\n        const myArr = []\r\n        ar.forEach(x => {\r\n            myArr.push(parseFloat());\r\n        });\r\n        return myArr;\r\n    };\r\n  \r\n\r\n        useEffect(() => {\r\n            const getStudents = async () => {\r\n              const data = await getDocs(usersCollectionRef);\r\n              setStudents(data.docs.map((doc)=> ({ ...doc.data(), id: doc.id })));\r\n            }; \r\n            \r\n            getStudents();\r\n          } ,[]);\r\n\r\n          const valid329Students = []\r\n          const valid329Scores = []\r\n          students.filter(s => s.MGMT329Score >= 0).forEach(stud => {\r\n                valid329Scores.push(parseInt(stud.MGMT329Score));\r\n                valid329Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\r\n          })\r\n\r\n          const valid450Students = []\r\n          const valid450Scores = []\r\n          const sampleScores = [20, 50, 30, 90, 25, 34, 100]\r\n          let i = 0;\r\n          students.filter(s => s.MGMT450Score >= 0).forEach(stud => {\r\n            valid450Scores[i] = stud.MGMT450Score\r\n            i++;\r\n              valid450Students.push(stud.fName.charAt(0) + \". \" + stud.lName.charAt(0));\r\n          })\r\n          console.log('comparing arrays');\r\n          console.log(valid329Scores);\r\n          console.log([77, 39, 79, 88, 98, 92, 74]);\r\n          if(valid329Scores === [77, 39, 79, 88, 98, 92, 74]){\r\n            console.log('the arrays are equal');\r\n          } else {\r\n            console.log('the arrays are')\r\n          }\r\n          console.log('end of comparing arrays');\r\n          /*console.log(valid329Students);\r\n          console.log(valid450Scores);\r\n          console.log(valid329Students);*/\r\n\r\n    return (\r\n        <View>\r\n      \r\n<Text>MGMT450 Scores</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: valid450Students,\r\n          datasets: [\r\n            {\r\n              data: valid329Scores\r\n            }\r\n          ]\r\n        }}\r\n        width={Dimensions.get(\"window\").width} // from react-native\r\n        height={220}\r\n        yAxisLabel=\"f\"\r\n        yAxisSuffix=\"f\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFrom: \"#fb8c00\",\r\n          backgroundGradientTo: \"#ffa726\",\r\n          decimalPlaces: 0, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \"2\",\r\n            stroke: \"#ffa726\"\r\n          }\r\n        }}\r\n      />\r\n      \r\n    </View>\r\n    );\r\n}\r\n\r\nexport default GradesChartScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    button: {\r\n      backgroundColor: '#0782F9',\r\n      width: '60%',\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: 'center',\r\n      marginTop: 40,\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n  })\r\n  "]},"metadata":{},"sourceType":"module"}